/*
 * Copyright (c) 2014, STMicroelectronics International N.V.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _CORE_SERVICEID_H
#define _CORE_SERVICEID_H

/**
 * Secure services identification numbers
 *
 * Here is given the description of the functions that are called by the
 * dispatcher when user requests a service number
 */
typedef enum {
	/* For TEE Client API 1.0 */
	SERVICEID_TEE_OPEN_SESSION       = 0x11000008,
	SERVICEID_TEE_CLOSE_SESSION      = 0x11000009,
	SERVICEID_TEE_INVOKE_COMMAND     = 0x1100000a,
	SERVICEID_TEE_REGISTER_RPC       = 0x1100000b,
	SERVICEID_TEE_SET_SEC_DDR        = 0x1100000c,
	SERVICEID_TEE_CANCEL_COMMAND     = 0x1100000d,
	SERVICEID_TEE_REGISTER_MEMORY    = 0x1100000e,
	SERVICEID_TEE_UNREGISTER_MEMORY  = 0x1100000f,

	/* teecore logs and restarts */
	SERVICEID_TEE_DEINIT_CPU = 0x11000010,
	SERVICEID_TEE_CRASH_CPU = 0x11000011,
	SERVICEID_TEE_SET_CORE_TRACE_LEVEL = 0x11000012,
	SERVICEID_TEE_GET_CORE_TRACE_LEVEL = 0x11000013,
	SERVICEID_TEE_SET_TA_TRACE_LEVEL = 0x11000014,
	SERVICEID_TEE_GET_TA_TRACE_LEVEL = 0x11000015,
	SERVICEID_TEE_GET_CORE_STATUS = 0x11000016,

	/* teecore configurations */
	SERVICEID_REGISTER_DEFAULT_SHMEM = 0x11000020,
	SERVICEID_UNREGISTER_DEFAULT_SHMEM = 0x11000021,
	SERVICEID_TEE_REGISTER_IRQFWD = 0x11000022,
	SERVICEID_TEE_UNREGISTER_IRQFWD = 0x11000023,
	SERVICEID_GET_SHMEM_START = 0x11000024,
	SERVICEID_GET_SHMEM_SIZE = 0x11000025,
	SERVICEID_GET_SHMEM_CACHED = 0x11000026,

	SERVICEID_ENABLE_L2CC_MUTEX = 0x20000000,
	SERVICEID_DISABLE_L2CC_MUTEX = 0x20000001,
	SERVICEID_GET_L2CC_MUTEX = 0x20000002,
	SERVICEID_SET_L2CC_MUTEX = 0x20000003,
	SERVICEID_LOAD_TEE = 0x20000004,

	/* Vendor specific services start here */
	SERVICEID_VENDOR_START = 0x30000000,
} t_service_id;

#endif
